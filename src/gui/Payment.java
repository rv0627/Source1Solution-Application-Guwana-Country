/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package gui;

import com.formdev.flatlaf.intellijthemes.materialthemeuilite.FlatMoonlightIJTheme;
import java.io.InputStream;
import java.net.URL;
import java.util.HashMap;
import javax.swing.JOptionPane;
import model.MySQL;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import java.util.logging.FileHandler;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.logging.SimpleFormatter;
import model.PaymentDetail;
import model.dueLoadInvItems;
import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.engine.data.JRTableModelDataSource;

/**
 *
 * @author Admin
 */
public class Payment extends javax.swing.JDialog {

    //public static Logger logger = Logger.getLogger("source1solution");
    private double grandTotal = 0;
    private double duePayment = 0;
    private double paidAmount = 0;
    private double updatePayment = 0;
    /**
     * Creates new form payment
     */
    MainInterface mi;

    public Payment(java.awt.Frame parent, boolean modal, HashMap<String, String> dueMap) {
        super(parent, modal);
        initComponents();

        this.setTitle("Source 1 Solutions - Due payment");

        mi = (MainInterface) parent;

        if (mi.duePaymentRow != -1) {
            jTextField1.setText(dueMap.get("invId"));
            jTextField2.setText(dueMap.get("cusName"));
            jFormattedTextField1.setText(dueMap.get("paidAmount"));
            jFormattedTextField2.setText(dueMap.get("duePayment"));

            paidAmount = Double.parseDouble(jFormattedTextField1.getText());
            duePayment = Double.parseDouble(jFormattedTextField2.getText());

            grandTotal = paidAmount + duePayment;

            jFormattedTextField3.setText(String.valueOf(grandTotal));
        }

        if (mi.shippDuePaymentRow != -1) {
            jTextField1.setText(dueMap.get("wir"));
            jTextField2.setText(dueMap.get("cusName"));
            jFormattedTextField1.setText(dueMap.get("paidAmount"));
            jFormattedTextField2.setText(dueMap.get("duePayment"));

            paidAmount = Double.parseDouble(jFormattedTextField1.getText());
            duePayment = Double.parseDouble(jFormattedTextField2.getText());

            grandTotal = paidAmount + duePayment;

            jFormattedTextField3.setText(String.valueOf(grandTotal));
        }

    }

    private void reset() {
        jTextField1.setText("");
        jTextField2.setText("");
        jFormattedTextField1.setText("");
        jFormattedTextField2.setText("");
        jFormattedTextField3.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jFormattedTextField2 = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        jFormattedTextField3 = new javax.swing.JFormattedTextField();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 21)); // NOI18N
        jLabel1.setText("Payment");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Invoice No");

        jTextField1.setEditable(false);
        jTextField1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Customer Name");

        jTextField2.setEditable(false);
        jTextField2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Paid Amount ($)");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Due Payment ($)");

        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton2.setText("Update Payment");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jFormattedTextField1.setEditable(false);
        jFormattedTextField1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        jFormattedTextField1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jFormattedTextField2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        jFormattedTextField2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Grand Total ($)");

        jFormattedTextField3.setEditable(false);
        jFormattedTextField3.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        jFormattedTextField3.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jFormattedTextField3)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jFormattedTextField1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jFormattedTextField2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jFormattedTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jFormattedTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try {

            if (mi.duePaymentRow != -1) {

                if (jFormattedTextField2.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Please enter due amount.", "Warning", JOptionPane.WARNING_MESSAGE);
                } else if (grandTotal < (Double.parseDouble(jFormattedTextField1.getText()) + Double.parseDouble(jFormattedTextField2.getText()))) {
                    JOptionPane.showMessageDialog(this, "Due payment is greater than grandtotal.", "Warning", JOptionPane.WARNING_MESSAGE);
                } else {

                    updatePayment = Double.parseDouble(jFormattedTextField2.getText());
                    MySQL.execute("UPDATE `invoice` SET"
                            + "`paid_ammount`=`paid_ammount`+'" + updatePayment + "' WHERE `invoice_id`='" + jTextField1.getText() + "'");
                    JOptionPane.showMessageDialog(this, "Update payment.", "Information", JOptionPane.INFORMATION_MESSAGE);

                  

                    ResultSet resultSet = MySQL.execute("SELECT * FROM `invoice` "
                            + "INNER JOIN `customers` ON `invoice`.`customers_customer_id`=`customers`.`customer_id` "
                            + "INNEr JOIN `invoice_item` ON `invoice`.`invoice_id`=`invoice_item`.`invoice_invoice_id` "
                            + "WHERE `invoice`.`invoice_id`='" + jTextField1.getText() + "'");

                    HashMap<String, dueLoadInvItems> ItemMap = new HashMap<>();
                    HashMap<String, String> cusMap = new HashMap<>();
                    int index = 0;
                    while (resultSet.next()) {
                        dueLoadInvItems dInvItems = new dueLoadInvItems();
                        dInvItems.setDescription(resultSet.getString("invoice_item.description_of_item"));
                        dInvItems.setQuantity(resultSet.getString("invoice_item.quantity"));

                        ItemMap.put("item_" + index, dInvItems);
                        index++;

                        cusMap.put("mobile", resultSet.getString("customers.mobile"));
                        cusMap.put("address", resultSet.getString("customers.address_line1") + " " + resultSet.getString("customers.address_line2") + " " + resultSet.getString("customers.address_line3"));
                        cusMap.put("sub", resultSet.getString("invoice.sub_total"));
                        cusMap.put("date", resultSet.getString("invoice.invoice_date"));
                    }

                    Vector<dueLoadInvItems> v = new Vector<>();
                    for (dueLoadInvItems item : ItemMap.values()) {
                        v.add(item);
                    }

                    InputStream reportStream = MainInterface.class.getResourceAsStream("/reports/updateInvoicePayment.jasper");
                    URL imageUrl = MainInterface.class.getResource("/img/IMG_report.jpg");

                    double paid = Double.parseDouble(jFormattedTextField2.getText()) + Double.parseDouble(jFormattedTextField1.getText());
                    double bal = ((Double.parseDouble(jFormattedTextField2.getText()) + Double.parseDouble(jFormattedTextField1.getText())) - Double.parseDouble(jFormattedTextField3.getText()));

                    HashMap<String, Object> parameters = new HashMap<>();
                    parameters.put("Parameter1", cusMap.get("mobile"));
                    parameters.put("Parameter2", jTextField2.getText());
                    parameters.put("Parameter4", jTextField1.getText());
                    parameters.put("Parameter5", cusMap.get("address"));

                    parameters.put("Parameter6", cusMap.get("date"));
                    parameters.put("Parameter8", jFormattedTextField3.getText());
                    parameters.put("Parameter10", String.valueOf(paid));
                    parameters.put("Parameter11", String.valueOf(bal));

                    parameters.put("Parameter12", cusMap.get("sub"));
                    parameters.put("ImageFilePath", imageUrl.toString()); // Replace with the actual path

                    JRBeanCollectionDataSource dataSource = new JRBeanCollectionDataSource(v);

                    //JasperPrintManager.printReport(jasperPrint, true);
                    if (reportStream != null) {
                        // Jasper Report file found, proceed with generating the report
                        JasperPrint jasperPrint = JasperFillManager.fillReport(reportStream, parameters, dataSource);

                        // Close the stream after use
                        reportStream.close();

                        // Print the report
                        JasperPrintManager.printReport(jasperPrint, true);
                    } else {
                        // Jasper Report file not found, handle the situation gracefully
                        JOptionPane.showMessageDialog(this, "Jasper Report file not found. Unable to generate the report.", "Warning", JOptionPane.WARNING_MESSAGE);

                    }

                    mi.loadMorePayments();
                    mi.completePayments();

                    ItemMap.clear();

                    this.dispose();
                    reset();
                    mi.duePaymentRow = -1;
                }
            }

            if (mi.shippDuePaymentRow != -1) {

                if (jFormattedTextField2.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Please enter due amount.", "Warning", JOptionPane.WARNING_MESSAGE);
                } else if (grandTotal < (Double.parseDouble(jFormattedTextField1.getText()) + Double.parseDouble(jFormattedTextField2.getText()))) {
                    JOptionPane.showMessageDialog(this, "Due payment is greater than total.", "Warning", JOptionPane.WARNING_MESSAGE);
                } else {

                    updatePayment = Double.parseDouble(jFormattedTextField2.getText());
                    MySQL.execute("UPDATE `excelsheetdata` SET"
                            + "`paidAmount`=`paidAmount`+'" + updatePayment + "' WHERE `number`='" + jTextField1.getText() + "'");
                    JOptionPane.showMessageDialog(this, "Update payment.", "Information", JOptionPane.INFORMATION_MESSAGE);

                    ResultSet resultSet = MySQL.execute("SELECT * FROM `excelsheetdata` "
                            + "INNER JOIN `customers` ON `excelsheetdata`.`customers_customer_id`=`customers`.`customer_id` "
                            + "WHERE `excelsheetdata`.`number`='" + jTextField1.getText() + "'");

                    if (resultSet.next()) {

                        InputStream reportStream = MainInterface.class.getResourceAsStream("/reports/updateShippingPayment.jasper");
                        URL imageUrl = MainInterface.class.getResource("/img/IMG_report.jpg");

                        double paid = Double.parseDouble(jFormattedTextField2.getText()) + Double.parseDouble(jFormattedTextField1.getText());
                        double bal = ((Double.parseDouble(jFormattedTextField2.getText()) + Double.parseDouble(jFormattedTextField1.getText())) - Double.parseDouble(jFormattedTextField3.getText()));

                        HashMap<String, Object> parameters = new HashMap<>();
                        parameters.put("Parameter1", jTextField2.getText());
                        parameters.put("Parameter2", resultSet.getString("includeDates"));
                        parameters.put("Parameter3", jTextField1.getText());
                        parameters.put("Parameter4", resultSet.getString("description"));

                        parameters.put("Parameter5", resultSet.getString("freight"));
                        parameters.put("Parameter6", resultSet.getString("duty"));
                        parameters.put("Parameter7", resultSet.getString("vat"));
                        parameters.put("Parameter8", resultSet.getString("handling"));

                        parameters.put("Parameter9", resultSet.getString("total"));
                        parameters.put("Parameter10", String.valueOf(paid));
                        parameters.put("Parameter11", String.valueOf(bal));
                        parameters.put("Parameter12", resultSet.getString("weight(lbs)"));

                        parameters.put("ImageFilePath", imageUrl.toString());

                        JREmptyDataSource dataSource = new JREmptyDataSource();

                        //JasperPrintManager.printReport(jasperPrint, true);
                        if (reportStream != null) {
                            // Jasper Report file found, proceed with generating the report
                            JasperPrint jasperPrint = JasperFillManager.fillReport(reportStream, parameters, dataSource);

                            // Close the stream after use
                            reportStream.close();

                            // Print the report
                            JasperPrintManager.printReport(jasperPrint, true);
                        } else {
                            // Jasper Report file not found, handle the situation gracefully
                            JOptionPane.showMessageDialog(this, "Jasper Report file not found. Unable to generate the report.", "Warning", JOptionPane.WARNING_MESSAGE);

                        }
                    }

                    mi.loadMoreShippingPayments("");
                    mi.completePayments();

                    this.dispose();

                    reset();
                    mi.shippDuePaymentRow = -1;

                }
            }

        } catch (Exception e) {
            MainInterface.logger.log(Level.WARNING, "Payment", e);
            //e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JFormattedTextField jFormattedTextField2;
    private javax.swing.JFormattedTextField jFormattedTextField3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
